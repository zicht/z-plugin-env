tasks:
    # Connect to the remote shell using ssh
    env.ssh:
        help: "Connect to the remote SSH"
        set:
            env: ?
            cmd: ? "bash"
            interactive: 1
        do: ssh -tq $(env.ssh) "cd $(env.root); $(cmd)"

    # Connect to the remote mysql shell using ssh
    env.mysql:
        unless: !env.ssh.connectable
        help: |
            Connect to the remote MySQL.

            This assumes that the local user on the remote machine has access to the local database.
            Configure the remote ~/.my.cnf if this is not the case.
        set:
            env: ?
            interactive: 1
        do: ssh -tq $(env.ssh) "mysql $(env.db)"

    # Initialize the SSH session by copying a local public key to the remote machine
    env.ssh.init:
        unless: env.ssh.connectable
        help: |
            Initialize an SSH key exchange

            Copies your local identity to the remote environment. The step is skipped if the environment
            already is connectable
        set:
            env: ?
            interactive: 1
        do: ssh-copy-id $(env.ssh)

    # Show the deployed version of the remote machine
    env.version:
        help: |
            Show which version is currently deployed at the remote environment.

            Downloads the remote revision file and shows which version is specified in it.
        set:
            env: ?
        do:
            - echo "$(env.versionat(env.ssh, verbose))"


    env.diff:
        help: |
            Show the diff against a deployed version
        set:
            env: ?
            version: ?vcs.current
        do:
            - $(vcs.diff(env.versionat(env.ssh, 0), vcs.current, verbose))
