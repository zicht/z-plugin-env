# @version ">=2.0"

# Build targets (environments)
envs: ~

# Whenever 'development' is mentioned, that is considered the local environment
local_env: '"development"'

tasks:
    # Connect to the remote shell using ssh
    env.ssh:
        help: "Connect to the remote SSH"
        args:
            target_env: ?
            cmd: ? "bash --login"
            interactive: 1
        do: ssh -tq $(envs[target_env].ssh) "cd $(envs[target_env].root); $(cmd)"

    # Connect to the remote mysql shell using ssh
    env.mysql:
        unless: !ssh.connectable(envs[target_env].ssh)
        help: |
            Connect to the remote MySQL.

            This assumes that the local user on the remote machine has access to the local database.
            Configure the remote ~/.my.cnf if this is not the case.
        args:
            target_env: ?
            interactive: 1
        do: ssh -tq $(envs[target_env].ssh) "mysql $(envs[target_env].db)"

    # Initialize the SSH session by copying a local public key to the remote machine
    env.ssh-copy-id:
        unless: ssh.connectable(envs[target_env].ssh)
        help: |
            Initialize an SSH key exchange

            Copies your local identity to the remote environment. The step is skipped if the environment
            already is connectable
        args:
            target_env: ?
            interactive: 1
        do: ssh-copy-id $(envs[target_env].ssh)

    # Show the deployed version of the remote machine
    env.version:
        help: |
            Show which version is currently deployed at the remote environment.

            Downloads the remote revision file and shows which version is specified in it.
        args:
            target_env: ?
        do:
            - echo "$(env.versionat(target_env, VERBOSE))"

    env.diff:
        help: |
            Compare the current version to the version at a remote environment

            Downloads the remote revision file to determine what version is currently there and executes a diff on them
        args:
            target_env: ?
            version: ? vcs.current
        do: |
            $(vcs.diff(env.versionat(target_env), version, VERBOSE))
